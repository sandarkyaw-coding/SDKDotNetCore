<div>
    <canvas id="myChart"></canvas>
</div>

@section scripts{
    <script>
        var CHART_COLORS = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        const MONTHS = [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
        ];

        var _seed = 1; // initialize the seed

        function valueOrDefault(value, defaultValue) {
            return value !== undefined ? value : defaultValue;
        }
        var Utils = {
            rand: function (min, max) {
                min = valueOrDefault(min, 0);
                max = valueOrDefault(max, 0);
                _seed = (_seed * 9301 + 49297) % 233280;
                return min + (_seed / 233280) * (max - min);
            },

                    months: function (config) {
                var cfg = config || {};
                var count = cfg.count || 12;
                var section = cfg.section;
                var values = [];
                var i, value;

                for (i = 0; i < count; ++i) {
                    value = MONTHS[Math.ceil(i) % 12];
                    values.push(value.substring(0, section));
                }

                return values;
            }
        };

        const DATA_COUNT = 7;
        const NUMBER_CFG = { count: DATA_COUNT, min: -100, max: 100 };

        const labels = Utils.months({ count: 7 });
        const data = {
            labels: labels,
            datasets: [
                {
                    label: 'Dataset 1',
                    data: labels.map(() => {
                        return [Utils.rand(-100, 100), Utils.rand(-100, 100)];
                    }),
                    backgroundColor: CHART_COLORS.red,
                },
                {
                    label: 'Dataset 2',
                    data: labels.map(() => {
                        return [Utils.rand(-100, 100), Utils.rand(-100, 100)];
                    }),
                    backgroundColor: CHART_COLORS.blue,
                },
            ]
        };

        const config = {
            type: 'bar',
            data: data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Chart.js Floating Bar Chart'
                    }
                }
            }
        };
        const ctx = document.getElementById('myChart');
        new Chart(ctx, config);

    </script>
}